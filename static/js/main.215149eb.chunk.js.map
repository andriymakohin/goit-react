{"version":3,"sources":["Components/Profile/Profile.js","helper/getRandomColor.js","Components/Statistics/Statistics.js","Components/Transactions/Transactions.js","Components/FriendList/FriendList.js","App.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","className","src","alt","followers","views","likes","color","i","Math","floor","random","Statistics","title","map","stat","key","id","style","backgroundColor","getRandomColor","label","percentage","defaultProps","Transactions","items","class","item","type","amount","currency","FriendList","friends","friend","isOnline","width","App","usersCard","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"26GA8CeA,G,MA1CC,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAC9C,OACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,eACb,yBAAKC,IAAKH,EAAQI,IAAKP,EAAMK,UAAU,WACvC,uBAAGA,UAAU,QAAQL,GACrB,uBAAGK,UAAU,OAAb,IAAqBJ,GACrB,uBAAGI,UAAU,YAAYH,IAG3B,wBAAIG,UAAU,SACZ,4BACE,0BAAMA,UAAU,SAAhB,aACA,0BAAMA,UAAU,YAAYD,EAAMI,YAEpC,4BACE,0BAAMH,UAAU,SAAhB,SACA,0BAAMA,UAAU,YAAYD,EAAMK,QAEpC,4BACE,0BAAMJ,UAAU,SAAhB,SACA,0BAAMA,UAAU,YAAYD,EAAMM,YCzB7B,G,MAAA,WAGb,IAFA,IACIC,EAAQ,IACHC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BD,GAHc,mBAGGE,KAAKC,MAAsB,GAAhBD,KAAKE,WAEnC,OAAOJ,ICDHK,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOb,EAAY,EAAZA,MAC3B,OACE,6BAASC,UAAU,gBAChBY,GAAS,wBAAIZ,UAAU,SAASY,GAEjC,wBAAIZ,UAAU,YACXD,EAAMc,KAAI,SAACC,GAAD,OACT,wBACEd,UAAU,aACVe,IAAKD,EAAKE,GACVC,MAAO,CAAEC,gBAAiBC,MAE1B,0BAAMnB,UAAU,eAAec,EAAKM,OACpC,0BAAMpB,UAAU,cAAcc,EAAKO,WAAnC,YAQZV,EAAWW,aAAe,CACxBV,MAAO,UAcMD,QCFAY,G,MAnCM,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,OACE,2BAAOC,MAAM,sBACX,+BACE,wBAAIzB,UAAU,QACZ,oCACA,sCACA,0CAIJ,+BACGwB,EAAMX,KAAI,SAACa,GAAD,OACT,wBAAI1B,UAAU,MAAMe,IAAKW,EAAKV,IAC5B,4BAAKU,EAAKC,MACV,4BAAKD,EAAKE,QACV,4BAAKF,EAAKG,kBCSPC,G,MAzBI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACE,yBAAK/B,UAAU,WACZ+B,EAAQlB,KAAI,SAAAmB,GAAM,OAAI,wBAAIhC,UAAU,gBAAgBe,IAAKiB,EAAOhB,IAC9DgB,EAAOC,SAAW,0BAAMjC,UAAU,eAAuB,0BAAMA,UAAU,gBAC1E,yBAAKA,UAAU,kBACbC,IAAK+B,EAAOlC,OACZI,IAAK8B,EAAOrC,KAAMuC,MAAM,OAC1B,uBAAGlC,UAAU,iBAAiBgC,EAAOrC,aCkB9BwC,MAjBf,WACE,OACE,oCACE,kBAAC,EAAD,CACExC,KAAMyC,EAAUzC,KAChBC,IAAKwC,EAAUxC,IACfC,SAAUuC,EAAUvC,SACpBC,OAAQsC,EAAUtC,OAClBC,MAAOqC,EAAUrC,QAEnB,kBAAC,EAAD,CAAYa,MAAM,eAAeb,MAAOsC,IACxC,kBAAC,EAAD,CAAYN,QAASA,IACrB,kBAAC,EAAD,CAAcP,MAAOc,MCpB3BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.215149eb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Profile.css\";\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"description\">\r\n        <img src={avatar} alt={name} className=\"avatar\" />\r\n        <p className=\"name\">{name}</p>\r\n        <p className=\"tag\">@{tag}</p>\r\n        <p className=\"location\">{location}</p>\r\n      </div>\r\n\r\n      <ul className=\"stats\">\r\n        <li>\r\n          <span className=\"label\">Followers</span>\r\n          <span className=\"quantity\">{stats.followers}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">Views</span>\r\n          <span className=\"quantity\">{stats.views}</span>\r\n        </li>\r\n        <li>\r\n          <span className=\"label\">Likes</span>\r\n          <span className=\"quantity\">{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  user: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    tag: PropTypes.string,\r\n    location: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    stats: PropTypes.shape({\r\n      followers: PropTypes.number,\r\n      views: PropTypes.number,\r\n      likes: PropTypes.number,\r\n    }),\r\n  }).isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","export default () => {\r\n  const letters = \"0123456789ABCDEF\";\r\n  let color = \"#\";\r\n  for (let i = 0; i < 6; i += 1) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport \"./Statistics.css\";\r\nimport getRandomColor from \"../../helper/getRandomColor\";\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  return (\r\n    <section className=\"statsSection\">\r\n      {title && <h2 className=\"title\">{title}</h2>}\r\n\r\n      <ul className=\"statList\">\r\n        {stats.map((stat) => (\r\n          <li\r\n            className=\"stat__item\"\r\n            key={stat.id}\r\n            style={{ backgroundColor: getRandomColor() }}\r\n          >\r\n            <span className=\"stat__label\">{stat.label}</span>\r\n            <span className=\"percentage\">{stat.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  title: \"Upload\",\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      label: PropTypes.string,\r\n      percentage: PropTypes.number,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport \"./Transactions.css\";\r\n\r\nconst Transactions = ({ items }) => {\r\n  return (\r\n    <table class=\"transactionHistory\">\r\n      <thead>\r\n        <tr className=\"head\">\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map((item) => (\r\n          <tr className=\"row\" key={item.id}>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactions.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Transactions;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport \"./FriendList.css\";\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <div className=\"friends\">\r\n      {friends.map(friend => <li className=\"friends__item\" key={friend.id}>\r\n        {friend.isOnline ? <span className=\"status__on\"></span> : <span className=\"status__off\"></span>}\r\n        <img className=\"friends__avatar\"\r\n          src={friend.avatar}\r\n          alt={friend.name} width=\"48\" />\r\n        <p className=\"friends__name\">{friend.name}</p>\r\n      </li>)}\r\n    </div>\r\n  );\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    isOnline: PropTypes.bool,\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string,\r\n  }).isRequired,\r\n};\r\n\r\n\r\n\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport usersCard from \"./bd/user.json\";\r\nimport statisticalData from \"./bd/statistical-data.json\";\r\nimport friends from \"./bd/friends.json\";\r\nimport transactions from \"./bd/transactions.json\";\r\n\r\nimport Profile from \"./Components/Profile/Profile\";\r\nimport Statistics from \"./Components/Statistics/Statistics\";\r\nimport Transactions from \"./Components/Transactions/Transactions\";\r\nimport FriendList from \"./Components/FriendList/FriendList\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Profile\r\n        name={usersCard.name}\r\n        tag={usersCard.tag}\r\n        location={usersCard.location}\r\n        avatar={usersCard.avatar}\r\n        stats={usersCard.stats}\r\n      />\r\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n      <FriendList friends={friends} />\r\n      <Transactions items={transactions} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}